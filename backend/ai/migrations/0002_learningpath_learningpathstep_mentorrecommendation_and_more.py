# Generated by Django 5.2.5 on 2025-08-09 13:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai', '0001_initial'),
        ('bookings', '0005_alter_booking_subject_and_more'),
        ('mentoring_sessions', '0001_initial'),
        ('skills', '0003_alter_mentortag_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('estimated_duration_weeks', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPathStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('order', models.PositiveIntegerField(default=1)),
                ('step_type', models.CharField(choices=[('mentor_session', 'Mentor Session'), ('self_study', 'Self Study'), ('practice_project', 'Practice Project'), ('assessment', 'Assessment'), ('resource_review', 'Resource Review')], default='self_study', max_length=30)),
                ('resources', models.JSONField(blank=True, default=list)),
                ('estimated_duration_hours', models.PositiveIntegerField(default=1)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['learning_path', 'order'],
            },
        ),
        migrations.CreateModel(
            name='MentorRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_score', models.FloatField(default=0.0, help_text='AI-calculated match score (0-1)')),
                ('reasoning', models.TextField(blank=True, default='', help_text='AI explanation for the recommendation')),
                ('is_viewed', models.BooleanField(default=False)),
                ('is_contacted', models.BooleanField(default=False)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-match_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SkillAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_type', models.CharField(choices=[('initial', 'Initial Assessment'), ('progress', 'Progress Check'), ('final', 'Final Assessment')], max_length=20)),
                ('questions_data', models.JSONField(default=dict)),
                ('answers_data', models.JSONField(default=dict)),
                ('proficiency_level', models.CharField(blank=True, choices=[('novice', 'Novice'), ('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20, null=True)),
                ('score_percentage', models.PositiveIntegerField(blank=True, null=True)),
                ('strengths', models.JSONField(blank=True, default=list)),
                ('weaknesses', models.JSONField(blank=True, default=list)),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='airesponse',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveIndex(
            model_name='airesponse',
            name='ai_airespon_type_2a380d_idx',
        ),
        migrations.AddField(
            model_name='airesponse',
            name='booking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_responses', to='bookings.booking'),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='context_data',
            field=models.JSONField(blank=True, default=dict, help_text='Input data for AI processing'),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='error_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='model_version',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='processing_time_ms',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='tokens_used',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='airesponse',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_responses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='airesponse',
            name='meta',
            field=models.JSONField(blank=True, default=dict, help_text='Additional metadata and settings'),
        ),
        migrations.AlterField(
            model_name='airesponse',
            name='model_name',
            field=models.CharField(default='gpt-3.5-turbo', max_length=100),
        ),
        migrations.AlterField(
            model_name='airesponse',
            name='prompt',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='airesponse',
            name='response',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='airesponse',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_responses', to='mentoring_sessions.session'),
        ),
        migrations.AlterField(
            model_name='airesponse',
            name='type',
            field=models.CharField(choices=[('session_summary', 'Session Summary'), ('learning_recommendation', 'Learning Recommendation'), ('skill_assessment', 'Skill Assessment'), ('mentor_match', 'Mentor Matching'), ('learning_path', 'Learning Path'), ('session_analysis', 'Session Analysis'), ('feedback_analysis', 'Feedback Analysis'), ('qa_response', 'Q&A Response'), ('content_generation', 'Content Generation')], default='general', max_length=32),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['type', 'status'], name='ai_airespon_type_e500d7_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['user', 'type'], name='ai_airespon_user_id_77ee94_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['session'], name='ai_airespon_session_a6359f_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['booking'], name='ai_airespon_booking_53a9bc_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['created_at'], name='ai_airespon_created_33cf58_idx'),
        ),
        migrations.AddField(
            model_name='learningpath',
            name='ai_response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_learning_paths', to='ai.airesponse'),
        ),
        migrations.AddField(
            model_name='learningpath',
            name='learner',
            field=models.ForeignKey(limit_choices_to={'role': 'learner'}, on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learningpath',
            name='target_skills',
            field=models.ManyToManyField(related_name='learning_paths', to='skills.skill'),
        ),
        migrations.AddField(
            model_name='learningpathstep',
            name='learning_path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='ai.learningpath'),
        ),
        migrations.AddField(
            model_name='learningpathstep',
            name='related_booking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='learning_path_steps', to='bookings.booking'),
        ),
        migrations.AddField(
            model_name='mentorrecommendation',
            name='ai_response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentor_recommendations', to='ai.airesponse'),
        ),
        migrations.AddField(
            model_name='mentorrecommendation',
            name='learner',
            field=models.ForeignKey(limit_choices_to={'role': 'learner'}, on_delete=django.db.models.deletion.CASCADE, related_name='mentor_recommendations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mentorrecommendation',
            name='matching_skills',
            field=models.ManyToManyField(related_name='mentor_recommendations', to='skills.skill'),
        ),
        migrations.AddField(
            model_name='mentorrecommendation',
            name='mentor',
            field=models.ForeignKey(limit_choices_to={'role': 'mentor'}, on_delete=django.db.models.deletion.CASCADE, related_name='recommendation_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='skillassessment',
            name='ai_response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_assessments', to='ai.airesponse'),
        ),
        migrations.AddField(
            model_name='skillassessment',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='skills.skill'),
        ),
        migrations.AddField(
            model_name='skillassessment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_assessments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='learningpathstep',
            unique_together={('learning_path', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='mentorrecommendation',
            unique_together={('learner', 'mentor')},
        ),
        migrations.AddIndex(
            model_name='skillassessment',
            index=models.Index(fields=['user', 'skill'], name='ai_skillass_user_id_bbe7ce_idx'),
        ),
        migrations.AddIndex(
            model_name='skillassessment',
            index=models.Index(fields=['assessment_type'], name='ai_skillass_assessm_b99475_idx'),
        ),
    ]
