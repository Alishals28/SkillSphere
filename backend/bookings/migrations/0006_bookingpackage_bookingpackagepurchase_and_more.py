# Generated by Django 5.2.5 on 2025-08-09 14:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bookings', '0005_alter_booking_subject_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('session_count', models.PositiveIntegerField()),
                ('validity_days', models.PositiveIntegerField(help_text='Days to use all sessions')),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('package_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_schedule', models.BooleanField(default=False, help_text='Auto-schedule sessions weekly')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_packages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookingPackagePurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchased_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sessions_used', models.PositiveIntegerField(default=0)),
                ('sessions_remaining', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_purchases', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='bookings.bookingpackage')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='package_purchase',
            field=models.ForeignKey(blank=True, help_text='Package purchase used for this booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings_used', to='bookings.bookingpackagepurchase'),
        ),
        migrations.CreateModel(
            name='BookingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('default_subject', models.CharField(max_length=200)),
                ('default_duration_minutes', models.PositiveIntegerField(default=60)),
                ('default_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('auto_confirm', models.BooleanField(default=False)),
                ('preparation_notes', models.TextField(blank=True, help_text='What learners should prepare')),
                ('session_outline', models.TextField(blank=True, help_text='Typical session structure')),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True, help_text='Visible to learners')),
                ('times_used', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_templates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='booking_template',
            field=models.ForeignKey(blank=True, help_text='Template used to create this booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings_created', to='bookings.bookingtemplate'),
        ),
        migrations.CreateModel(
            name='GroupBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('subject', models.CharField(max_length=200)),
                ('scheduled_start_utc', models.DateTimeField()),
                ('scheduled_end_utc', models.DateTimeField()),
                ('actual_start_utc', models.DateTimeField(blank=True, null=True)),
                ('actual_end_utc', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(default=5)),
                ('min_participants', models.PositiveIntegerField(default=2)),
                ('current_participants', models.PositiveIntegerField(default=1)),
                ('price_per_person', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('open', 'Open for Registration'), ('full', 'Full'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='open', max_length=30)),
                ('meeting_url', models.URLField(blank=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_password', models.CharField(blank=True, max_length=50)),
                ('prerequisites', models.TextField(blank=True, help_text='Prerequisites for participants')),
                ('materials_needed', models.TextField(blank=True, help_text='Materials participants should prepare')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(help_text='User who created the group booking', on_delete=django.db.models.deletion.CASCADE, related_name='created_group_bookings', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_bookings_as_mentor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupBookingParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('confirmed', 'Confirmed'), ('attended', 'Attended'), ('no_show', 'No Show'), ('cancelled', 'Cancelled')], default='registered', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('group_booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='bookings.groupbooking')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_participations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecurringBookingTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Recurring Mentoring Session', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('subject', models.CharField(help_text='Session topic/subject', max_length=200)),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], max_length=20)),
                ('interval', models.PositiveIntegerField(default=1, help_text='Every X weeks/months')),
                ('weekday', models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], null=True)),
                ('time_utc', models.TimeField(help_text='Session time in UTC')),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank for indefinite', null=True)),
                ('max_sessions', models.PositiveIntegerField(blank=True, help_text='Maximum number of sessions', null=True)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('paused_until', models.DateField(blank=True, help_text='Pause until this date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_templates_as_learner', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_templates_as_mentor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='recurring_template',
            field=models.ForeignKey(blank=True, help_text='If this booking was generated from a recurring template', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_bookings', to='bookings.recurringbookingtemplate'),
        ),
        migrations.AddIndex(
            model_name='bookingpackage',
            index=models.Index(fields=['mentor', 'is_active'], name='bookings_bo_mentor__738db3_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingpackagepurchase',
            index=models.Index(fields=['learner', 'is_active'], name='bookings_bo_learner_d22011_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingpackagepurchase',
            index=models.Index(fields=['expires_at'], name='bookings_bo_expires_d5560f_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingtemplate',
            index=models.Index(fields=['mentor', 'is_active'], name='bookings_bo_mentor__2fae89_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingtemplate',
            index=models.Index(fields=['is_public', 'is_active'], name='bookings_bo_is_publ_a1f7a1_idx'),
        ),
        migrations.AddIndex(
            model_name='groupbooking',
            index=models.Index(fields=['mentor', 'status'], name='bookings_gr_mentor__739f0d_idx'),
        ),
        migrations.AddIndex(
            model_name='groupbooking',
            index=models.Index(fields=['scheduled_start_utc'], name='bookings_gr_schedul_03ad5b_idx'),
        ),
        migrations.AddIndex(
            model_name='groupbooking',
            index=models.Index(fields=['status', 'scheduled_start_utc'], name='bookings_gr_status_17e6d6_idx'),
        ),
        migrations.AddIndex(
            model_name='groupbookingparticipant',
            index=models.Index(fields=['learner', 'status'], name='bookings_gr_learner_52cfe6_idx'),
        ),
        migrations.AddIndex(
            model_name='groupbookingparticipant',
            index=models.Index(fields=['group_booking', 'status'], name='bookings_gr_group_b_396994_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupbookingparticipant',
            unique_together={('group_booking', 'learner')},
        ),
        migrations.AddIndex(
            model_name='recurringbookingtemplate',
            index=models.Index(fields=['mentor', 'is_active'], name='bookings_re_mentor__5cf765_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringbookingtemplate',
            index=models.Index(fields=['learner', 'is_active'], name='bookings_re_learner_1f28a8_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringbookingtemplate',
            index=models.Index(fields=['start_date', 'end_date'], name='bookings_re_start_d_fae935_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringbookingtemplate',
            index=models.Index(fields=['frequency', 'weekday'], name='bookings_re_frequen_01c422_idx'),
        ),
    ]
