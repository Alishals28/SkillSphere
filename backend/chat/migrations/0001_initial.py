# Generated by Django 5.2.5 on 2025-08-09 13:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0005_alter_booking_subject_and_more'),
        ('mentoring_sessions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_file_size_mb', models.PositiveIntegerField(default=10)),
                ('allowed_file_types', models.JSONField(default=list, help_text='List of allowed file extensions')),
                ('message_retention_days', models.PositiveIntegerField(default=365)),
                ('enable_message_editing', models.BooleanField(default=True)),
                ('enable_message_deletion', models.BooleanField(default=True)),
                ('enable_file_uploads', models.BooleanField(default=True)),
                ('enable_emoji_reactions', models.BooleanField(default=True)),
                ('max_messages_per_minute', models.PositiveIntegerField(default=30)),
                ('max_messages_per_hour', models.PositiveIntegerField(default=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Chat Settings',
                'verbose_name_plural': 'Chat Settings',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Chat Room', max_length=200)),
                ('room_type', models.CharField(choices=[('session', 'Session Chat'), ('general', 'General Chat'), ('support', 'Support Chat')], default='session', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_file_uploads', models.BooleanField(default=True)),
                ('auto_delete_after_days', models.PositiveIntegerField(default=90)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_room', to='bookings.booking')),
                ('session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_room', to='mentoring_sessions.session')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoomParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='member', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('is_typing', models.BooleanField(default=False)),
                ('typing_updated_at', models.DateTimeField(blank=True, null=True)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('sound_enabled', models.BooleanField(default=True)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants_info', to='chat.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_participations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chatroom',
            name='participants',
            field=models.ManyToManyField(related_name='chat_rooms', through='chat.ChatRoomParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('file', 'File Upload'), ('image', 'Image'), ('system', 'System Message'), ('code', 'Code Snippet'), ('link', 'Link Share')], default='text', max_length=20)),
                ('content', models.TextField(blank=True, default='')),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='chat_files/')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_mime_type', models.CharField(blank=True, max_length=100)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('system_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(default='üëç', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MessageReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_read_statuses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='chatroomparticipant',
            index=models.Index(fields=['chat_room', 'user'], name='chat_chatro_chat_ro_bcdbb3_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomparticipant',
            index=models.Index(fields=['user', 'joined_at'], name='chat_chatro_user_id_49c7c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatroomparticipant',
            unique_together={('chat_room', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['room_type', 'is_active'], name='chat_chatro_room_ty_808675_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['session'], name='chat_chatro_session_716b9a_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['booking'], name='chat_chatro_booking_59d570_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['chat_room', 'created_at'], name='chat_messag_chat_ro_bda5c0_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'created_at'], name='chat_messag_sender__b02346_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='chat_messag_message_973666_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_deleted'], name='chat_messag_is_dele_543a03_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereaction',
            index=models.Index(fields=['message', 'emoji'], name='chat_messag_message_ce4293_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereaction',
            unique_together={('message', 'user', 'emoji')},
        ),
        migrations.AddIndex(
            model_name='messagereadstatus',
            index=models.Index(fields=['message', 'user'], name='chat_messag_message_0f08b4_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadstatus',
            index=models.Index(fields=['user', 'read_at'], name='chat_messag_user_id_d6090a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereadstatus',
            unique_together={('message', 'user')},
        ),
    ]
